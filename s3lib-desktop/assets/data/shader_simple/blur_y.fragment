#ifdef GL_ES
	#define LOWP lowp
	precision mediump float;
#else
	#define LOWP
#endif
varying LOWP vec4 v_color;
varying vec2 v_texCoords;
uniform sampler2D u_texture;

uniform float blurSizeX;
uniform float blurSizeY;
uniform float blurStrength;

void main()
{
	vec4 blurColour=vec4(0.0);
   
	//
	// Blur vertical
	//
	blurColour += texture2D(u_texture, vec2(v_texCoords.x, v_texCoords.y - 4.0 * blurSizeY)) * 0.05 * blurStrength;
	blurColour += texture2D(u_texture, vec2(v_texCoords.x, v_texCoords.y - 3.0 * blurSizeY)) * 0.10 * blurStrength;
	blurColour += texture2D(u_texture, vec2(v_texCoords.x, v_texCoords.y - 2.0 * blurSizeY)) * 0.15 * blurStrength;
	blurColour += texture2D(u_texture, vec2(v_texCoords.x, v_texCoords.y - blurSizeY)) * 0.20 * blurStrength;
	blurColour += texture2D(u_texture, vec2(v_texCoords.x, v_texCoords.y)) * 0.25 * blurStrength;
	blurColour += texture2D(u_texture, vec2(v_texCoords.x, v_texCoords.y + blurSizeY)) * 0.20 * blurStrength;
	blurColour += texture2D(u_texture, vec2(v_texCoords.x, v_texCoords.y + 2.0 * blurSizeY)) * 0.15 * blurStrength;
	blurColour += texture2D(u_texture, vec2(v_texCoords.x, v_texCoords.y + 3.0 * blurSizeY)) * 0.10 * blurStrength;
	blurColour += texture2D(u_texture, vec2(v_texCoords.x, v_texCoords.y + 4.0 * blurSizeY)) * 0.05 * blurStrength;
		
	gl_FragColor = blurColour;
}