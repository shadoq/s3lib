{"code":"//JRM\n\n//Adapted from https://plus.google.com/u/1/116542359168957860292/posts/GBUeQZrBphh\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 mouse;\n\nvarying vec2 surfacePosition;\n\nuniform float time;\n#define time time + surfacePosition.y*128.\n\n\n//bump this up if your gpu isn't shit\n#define MAXIT 1000.\n\nfloat msin(float n){\n    return (1. + sin(n))*.5;\n}\n\nvec4 color(float value){\n    float r = msin(value + 0.+0.2);\n    float g = msin(value + 1.+0.1);\n    float b = msin(value + 2.-0.3);\n    return vec4(r, g, b, 1);\n}\n\n\nvec2 cmult(vec2 a, vec2 b){\n    return vec2(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);\n}\n\n\nvoid main() {\n  vec2 pos = surfacePosition*0.001+vec2(-1.7689,0.0013);\n\n\n  vec2 z = vec2(0);\n\t\n  float N;\t\n  for(float n = 1.; n < MAXIT; n++){\n\t  \n      \n    //pretty sure this bullshit works out\n    z = cmult(z,z) + pos * (1. + float(fract(sqrt(8. * n + 1.)) == 0.0) * (sin(time*0.05-1.505)+1.) * 0.0005);\n\t  \n    if(dot(z,z) > 4.){ \n      N = n;\n      break;\n    }\n\n  }\n\n\n  gl_FragColor = color(N*0.02+4.2);\n\n}","user":"5518e9b","parent":"/e#20055.5"}